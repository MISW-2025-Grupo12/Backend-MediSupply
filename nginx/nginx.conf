events {
    worker_connections 1024;
}

http {
    # --- Upstreams ---
    upstream auth      { server auth-service:5004; }
    upstream usuarios  { server usuarios:5001; }
    upstream ventas    { server ventas:5002; }
    upstream productos { server productos:5000; }
    upstream logistica { server logistica:5003; }

    # --- Logs ---
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost;

        # --- Common proxy settings ---
        proxy_connect_timeout 60s;
        proxy_send_timeout    60s;
        proxy_read_timeout    60s;
        proxy_http_version    1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Uploads (adjust as needed)
        client_max_body_size 25m;

        # --- CORS (mirror Origin; credentials-safe) ---
        set $cors_origin "";
        if ($http_origin ~* "^https?://(.+)$") { set $cors_origin $http_origin; }
        add_header Access-Control-Allow-Origin  "$cors_origin" always;
        add_header Vary                         "Origin"       always;
        add_header Access-Control-Allow-Credentials "true"      always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;

        # Preflight short-circuit
        if ($request_method = OPTIONS) {
            return 204;
        }

        # --- Health check (JSON) ---
        location = /health {
            default_type application/json;
            return 200 '{"status":"up","service":"nginx-gateway"}';
        }

        # --- Auth service (public endpoints live under /auth/ on upstream) ---
        location /auth/ {
            proxy_pass http://auth/;  # trailing slash strips /auth/ prefix
        }

        # --- Internal auth verification for auth_request ---
        location = /auth-verify {
            internal;
            proxy_pass http://auth/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI     $request_uri;
            proxy_set_header X-Original-Method  $request_method;
            proxy_set_header Authorization      $http_authorization;
        }

        # --- Usuarios ---
        location /usuarios/ {
            auth_request /auth-verify;
            auth_request_set $user_id    $upstream_http_x_user_id;
            auth_request_set $user_role  $upstream_http_x_user_role;
            auth_request_set $user_email $upstream_http_x_user_email;

            proxy_set_header X-User-Id    $user_id;
            proxy_set_header X-User-Role  $user_role;
            proxy_set_header X-User-Email $user_email;

            proxy_pass http://usuarios/;  # trailing slash strips /usuarios/
        }

        # --- Ventas ---
        location /ventas/ {
            auth_request /auth-verify;
            auth_request_set $user_id    $upstream_http_x_user_id;
            auth_request_set $user_role  $upstream_http_x_user_role;
            auth_request_set $user_email $upstream_http_x_user_email;

            proxy_set_header X-User-Id    $user_id;
            proxy_set_header X-User-Role  $user_role;
            proxy_set_header X-User-Email $user_email;

            proxy_pass http://ventas/;
        }

        # --- Productos ---
        location /productos/ {
            auth_request /auth-verify;
            auth_request_set $user_id   $upstream_http_x_user_id;
            auth_request_set $user_role $upstream_http_x_user_role;

            proxy_set_header X-User-Id   $user_id;
            proxy_set_header X-User-Role $user_role;

            proxy_pass http://productos/;
        }

        # --- Log√≠stica ---
        location /logistica/ {
            auth_request /auth-verify;
            auth_request_set $user_id   $upstream_http_x_user_id;
            auth_request_set $user_role $upstream_http_x_user_role;

            proxy_set_header X-User-Id   $user_id;
            proxy_set_header X-User-Role $user_role;

            proxy_pass http://logistica/;
        }

        # --- Default 404 (JSON) ---
        location / {
            default_type application/json;
            return 404 '{"error":"Not Found","message":"Use /auth, /usuarios, /ventas, /productos, or /logistica"}';
        }
    }
}
