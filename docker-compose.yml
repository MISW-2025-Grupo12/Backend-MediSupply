version: '3.8'

services:
  # Base de datos PostgreSQL para Usuarios
  usuarios-db:
    image: postgres:15-alpine
    container_name: medi-supply-usuarios-db
    environment:
      POSTGRES_DB: usuarios_db
      POSTGRES_USER: usuarios_user
      POSTGRES_PASSWORD: usuarios_pass
    volumes:
      - usuarios_db_data:/var/lib/postgresql/data
    networks:
      - medi-supply-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usuarios_user -d usuarios_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de datos PostgreSQL para Productos
  productos-db:
    image: postgres:15-alpine
    container_name: medi-supply-productos-db
    environment:
      POSTGRES_DB: productos_db
      POSTGRES_USER: productos_user
      POSTGRES_PASSWORD: productos_pass
    volumes:
      - productos_db_data:/var/lib/postgresql/data
    networks:
      - medi-supply-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U productos_user -d productos_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservicio de Usuarios (Proveedores)
  usuarios:
    build:
      context: ./Usuarios
      dockerfile: Dockerfile
    container_name: medi-supply-usuarios
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - SQLALCHEMY_DATABASE_URI=postgresql://usuarios_user:usuarios_pass@usuarios-db:5432/usuarios_db
    networks:
      - medi-supply-network
    depends_on:
      usuarios-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Microservicio de Productos
  productos:
    build:
      context: ./Productos
      dockerfile: Dockerfile
    container_name: medi-supply-productos
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - SQLALCHEMY_DATABASE_URI=postgresql://productos_user:productos_pass@productos-db:5432/productos_db
      - USUARIOS_SERVICE_URL=http://usuarios:5001
    networks:
      - medi-supply-network
    depends_on:
      productos-db:
        condition: service_healthy
      usuarios:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de datos PostgreSQL para Ventas
  ventas-db:
    image: postgres:15-alpine
    container_name: medi-supply-ventas-db
    environment:
      POSTGRES_DB: ventas_db
      POSTGRES_USER: ventas_user
      POSTGRES_PASSWORD: ventas_pass
    volumes:
      - ventas_db_data:/var/lib/postgresql/data
    networks:
      - medi-supply-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ventas_user -d ventas_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservicio de Ventas
  ventas:
    build:
      context: ./Ventas
      dockerfile: Dockerfile
    container_name: medi-supply-ventas
    ports:
      - "5002:5002"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - SQLALCHEMY_DATABASE_URI=postgresql://ventas_user:ventas_pass@ventas-db:5432/ventas_db
      - USUARIOS_SERVICE_URL=http://usuarios:5001
    networks:
      - medi-supply-network
    depends_on:
      ventas-db:
        condition: service_healthy
      usuarios:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Volúmenes para persistir datos de PostgreSQL
volumes:
  usuarios_db_data:
    driver: local
  productos_db_data:
    driver: local
  ventas_db_data:
    driver: local

# Red para comunicación entre servicios
networks:
  medi-supply-network:
    driver: bridge
