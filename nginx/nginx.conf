events {
    worker_connections 1024;
}

http {
    # Upstreams para todos los servicios
    upstream auth {
        server auth-service:5004;
    }
    
    upstream usuarios {
        server usuarios:5001;
    }
    
    upstream ventas {
        server ventas:5002;
    }
    
    upstream productos {
        server productos:5000;
    }
    
    upstream logistica {
        server logistica:5003;
    }

    # Configuración de logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost;

        # Timeout configurations
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # CORS Headers - Add these globally
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Health check del gateway
        location = /health {
            return 200 '{"status":"up","service":"nginx-gateway"}';
            add_header Content-Type application/json;
        }

        # Auth Service - Login (público, sin auth_request)
        location /auth/ {
            proxy_pass http://auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Usuarios Service
        location /usuarios/ {
            # Verificar autenticación y autorización
            auth_request /auth-verify;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_role $upstream_http_x_user_role;
            auth_request_set $user_email $upstream_http_x_user_email;
            
            # Pasar al servicio backend
            proxy_pass http://usuarios;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Inyectar headers de usuario
            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Role $user_role;
            proxy_set_header X-User-Email $user_email;
        }

        # Ventas Service
        location /ventas/ {
            auth_request /auth-verify;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_role $upstream_http_x_user_role;
            auth_request_set $user_email $upstream_http_x_user_email;
            
            proxy_pass http://ventas;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Role $user_role;
            proxy_set_header X-User-Email $user_email;
        }

        # Productos Service
        location /productos/ {
            auth_request /auth-verify;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_role $upstream_http_x_user_role;
            
            proxy_pass http://productos;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Role $user_role;
        }

        # Logística Service
        location /logistica/ {
            auth_request /auth-verify;
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_role $upstream_http_x_user_role;
            
            proxy_pass http://logistica;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Role $user_role;
        }

        # Internal auth endpoint - llamado por auth_request
        location = /auth-verify {
            internal;
            proxy_pass http://auth/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header Authorization $http_authorization;
        }

        # Default location
        location / {
            return 404 '{"error":"Not Found","message":"Use /auth, /usuarios, /ventas, /productos, or /logistica"}';
            add_header Content-Type application/json;
        }
    }
}

